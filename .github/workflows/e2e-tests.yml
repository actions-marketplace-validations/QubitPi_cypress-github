---
name: Nexus Graph CI/CD E2E Tests

"on":
  workflow_call:
    inputs:
      testing_env:
        required: true
        type: string
      spec_file_path:
        required: true
        type: string
      entity_extraction_call_delay_in_ms:
        required: false
        type: string
        default: 5000
    secrets:
      test_env_file:
        required: true

jobs:
  e2e-tests:
    name: E2E Tests (${{ inputs.spec_file_path }}) in ${{ inputs.testing_env }} Mode
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_version: [16]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install dependencies
        run: yarn install
      - name: Load app environment variables
        run:
          touch .env
          echo "${{ secrets.test_env_file }}" >> .env
#      - name: Load app environment variables
#        run: |
#          touch .env
#          echo "NODE_ENV=development" >> .env
#          echo "EXPAND_API_URL=${{ secrets.EXPAND_API_URL }}" >> .env
#          echo "ENTITY_EXTRACTION_CALL_DELAY_IN_MS=${{ inputs.entity_extraction_call_delay_in_ms }}" >> .env
#          echo "ENTITY_EXTRACTION_API_URL=${{ secrets.ENTITY_EXTRACTION_API_URL }}" >> .env
#          echo "LOGTO_APP_ID=${{ secrets.LOGTO_APP_ID }}" >> .env
#          echo "LOGTO_ENDPOINT_URL=${{ secrets.LOGTO_ENDPOINT_URL }}" >> .env
#          echo "TEST_USER_NAME=${{ secrets.TEST_USER_NAME }}" >> .env
#          echo "TEST_USER_PASSWORD=${{ secrets.TEST_USER_PASSWORD }}" >> .env
      - name: Run E2E tests in ${{ inputs.testing_env }} mode
        run: |
          if [[ ${{ inputs.testing_env }} == 'dev' ]]; then
              yarn start &
              yarn wait-on-dev
              yarn e2e --spec "${{ inputs.spec_file_path }}"
          else
              yarn build
              npm install -g serve
              serve -s dist -l 8080 &
              yarn wait-on-prod
              yarn e2e --spec "${{ inputs.spec_file_path }}"
          fi
        env:
          SPEC_FILE_PATH: ${{ inputs.spec_file_path }}
      - name: Upload test videos and screenshots on test failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.testing_env }}-${{ inputs.spec_file_path }}-${{ matrix.node_version }}
          path: |
            ./cypress/videos
            ./cypress/screenshots
